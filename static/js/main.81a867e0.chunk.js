(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[0],{79:function(e,t,a){},80:function(e,t,a){},94:function(e,t,a){"use strict";a.r(t);var s=a(3),n=a(1),r=a.n(n),i=a(12),o=a.n(i),c=(a(79),a(66)),l=a(11),h=(a(80),a(35)),d=a(36),m=a(44),j=a(43),p=a(65),b=a(52),g=a(127),_=a(31),u=a(61),f=a.n(u),O=a.p+"static/media/watson.9f56b195.jpg",y=a(129),x={isModalOpen:!1},w=function(e){Object(m.a)(a,e);var t=Object(j.a)(a);function a(){var e;Object(h.a)(this,a);for(var s=arguments.length,n=new Array(s),r=0;r<s;r++)n[r]=arguments[r];return(e=t.call.apply(t,[this].concat(n))).state=x,e.modalToggle=function(){var t=e.state.isModalOpen;e.setState({isModalOpen:!t})},e}return Object(d.a)(a,[{key:"render",value:function(){var e=this.state.isModalOpen,t=this.props,a=t.cardChildren,n=t.children;return Object(s.jsxs)("div",{className:"project-modal",children:[Object(s.jsx)("div",{className:"project-modal__card border",onClick:this.modalToggle,children:a}),Object(s.jsx)(y.a,{style:{maxWidth:"unset"},open:e,onClose:this.modalToggle,maxWidth:"md",fullWidth:!0,children:n})]})}}]),a}(r.a.Component),v=a.p+"static/media/fragmentalScrn.422ffc1f.png",N=a.p+"static/media/fragmentalCard.ee0365ab.png",k=a(131),P=a(126);function I(){return Object(s.jsxs)(s.Fragment,{children:[Object(s.jsx)("img",{src:N}),Object(s.jsx)("h3",{children:"FRAGMENTAL"})]})}function S(){return Object(s.jsxs)("div",{className:"project-modal__modal",children:[Object(s.jsx)(k.a,{children:Object(s.jsx)("h1",{className:"project-modal__modal__title",children:'"Fragmental" - Global Game Jam 2020'})}),Object(s.jsx)(P.a,{children:Object(s.jsxs)("div",{className:"project-modal__modal__content",children:[Object(s.jsxs)("div",{className:"project-modal__modal__content__header",children:[Object(s.jsxs)("div",{className:"project-modal__modal__content__header__image",children:[Object(s.jsx)("img",{src:v,alt:"A screenshot of Fragmental, showing one of the puzzle rooms with 3 doors and one of the playable robots."}),Object(s.jsx)("a",{href:"https://tiago-silva.itch.io/fragmental",children:" Itch.io Download Link"})]}),Object(s.jsxs)("span",{className:"project-modal__modal__content__header__intro",children:["This game was my team\u2019s entry for the Global Game Jam 2020, where the theme was \u201cRepair\u201d. It\u2019s a Portal-inspired puzzle game where the main mechanic is swapping playable characters by putting together their 3 pieces. The goal of each puzzle is to place 3 robot pieces into the funnel near the goal door.",Object(s.jsx)("br",{}),"Each playable robot has its own special ability and clever swapping is key to solve the various puzzles. This game was a fantastic learning experience. Not only was this the first time I could 100% focus on the game\u2019s programming (since the other 2 members of my team were both dedicated artists), it was also an opportunity to experiment with level design in a puzzle game as well as certain mechanics that I had been wanting to experiment with for a long while."]})]}),Object(s.jsxs)("div",{className:"project-modal__modal__content__body",children:[Object(s.jsx)("h1",{children:"What I learned / Challenges"}),Object(s.jsx)("p",{children:"While this wasn\u2019t the first game jam I participated in, it was still a great experience in working under a deadline and in managing a small team."}),Object(s.jsx)("p",{children:"The main challenge in developing this game was implementing the picking up and carrying mechanic (since Unity physics tend to be rather temperamental) and the character-swapping mechanic. For that mechanic, whenever 2 pieces of the same robot collide, the game instantiates an \u201cempty\u201d object with 3 separate attachment points, and then attaches each piece to its corresponding points. When all 3 pieces are parented to their points, the object is removed and replaced with the playable character. The original playable character is removed, and in its position 3 pieces are spawned."}),Object(s.jsx)("p",{children:"A similar process is used for when the player presses the \u201cdetonate\u201d button: the incomplete robot object releases its pieces from the attachment points and then deletes itself. A small cooldown is implemented to prevent pieces from immediately reattaching as soon as the player releases them. Overall, I\u2019m extremely happy with this project, although sadly it is a little buggy."})]})]})})]})}var T=a.p+"static/media/metroidScrn.3480dd0e.png",C=a.p+"static/media/metroid_card.d8ca0454.png";function E(){return Object(s.jsxs)(s.Fragment,{children:[Object(s.jsx)("img",{src:C}),Object(s.jsx)("h3",{children:"METROID PRIME-LIKE FPS"})]})}function M(){return Object(s.jsxs)("div",{className:"project-modal__modal",children:[Object(s.jsx)(k.a,{children:Object(s.jsx)("h1",{className:"project-modal__modal__title",children:"Metroid Prime-style First Person Shooter"})}),Object(s.jsx)(P.a,{children:Object(s.jsxs)("div",{className:"project-modal__modal__content",children:[Object(s.jsxs)("div",{className:"project-modal__modal__content__header",children:[Object(s.jsxs)("div",{className:"project-modal__modal__content__header__image",children:[Object(s.jsx)("img",{src:T,alt:"A screenshot of Fragmental, showing one of the puzzle rooms with 3 doors and one of the playable robots."}),Object(s.jsx)("a",{href:"https://watsondynamite.itch.io/metroid-like-concept",children:"Itch.io Download Link"})]}),Object(s.jsx)("span",{className:"project-modal__modal__content__header__intro",children:Object(s.jsx)("p",{children:"The main goal of this project was the implementation of an FPS aiming system reminiscent of the Metroid Prime games, in which, contrary to the majority of modern FPSs, the aiming crosshair is not confined to the very center point of the screen and is instead mobile and controllable by the player, allowing aiming within a portion of the screen without rotating the camera."})})]}),Object(s.jsxs)("div",{className:"project-modal__modal__content__body",children:[Object(s.jsx)("p",{children:"Controls:"}),Object(s.jsxs)("span",{children:["WASD - movement",Object(s.jsx)("br",{}),"Spacebar - Jump",Object(s.jsx)("br",{}),"Mouse - Aim",Object(s.jsx)("br",{}),"Scroll Wheel - Change Temperature",Object(s.jsx)("br",{}),"E near the button - spawn enemy"]}),Object(s.jsx)("p",{children:"The main goal of this project was the implementation of an FPS aiming system reminiscent of the Metroid Prime games, in which, contrary to the majority of modern FPSs, the aiming crosshair is not confined to the very center point of the screen and is instead mobile and controllable by the player, allowing aiming within a portion of the screen without rotating the camera."}),Object(s.jsx)("p",{children:"Additionally to this, I also wished to experiment with a gameplay mechanic involving manipulating the temperature of the player character\u2019s suit, thus altering the properties of the projectiles fired by the weapon. The spawnable skull enemy reacts differently to different shot temperatures: cold temperatures will gradually freeze it, causing it to fall down and shatter into pieces, while hot temperatures will light it on fire, causing it to become aggressive."}),Object(s.jsx)("p",{children:"Finally, this game also served as a test for DOOM-styled enemies and UI elements reminiscent of the PlayStation era, utilizing pre-rendered sprites made from 3D models."}),Object(s.jsx)("p",{children:"The main challenge of this project was correctly firing the projectile to the direction intended by the player. The solution was to cast a ray from the camera towards the equivalent direction in the world space of the aiming crosshair, using Camera.ScreenToWorldSpace()."}),Object(s.jsx)("p",{children:"That ray is used as the direction vector for another raycast that finds the first collidable object in its path. That collision point is used as the direction towards which the projectile is fired from the gun model. If no target is found, the aiming direction is simply a point very far away from the player in world space in the direction calculated from the aiming crosshair."}),Object(s.jsx)("p",{children:"As for the DOOM-style enemy sprite effect, the sprites originate from a 5 sprite sheet displaying 5 viewing angles of the sprite. The sprite renderer is always facing the player (for a \u201cbillboarding\u201d effect), but the enemy itself has its own rotation. The sprite to display is calculated from the angle between the forward facing direction of the player and the enemy. The sprite is inverted horizontally for the left-facing sprites."}),Object(s.jsx)("p",{children:"A similar process is used for when the player presses the \u201cdetonate\u201d button: the incomplete robot object releases its pieces from the attachment points and then deletes itself. A small cooldown is implemented to prevent pieces from immediately reattaching as soon as the player releases them."}),Object(s.jsx)("p",{children:'Weapon and skull enemy models and textures were created by me, as well as all UI elements except for the "visor" effect'}),Object(s.jsxs)("p",{children:["This project also uses",Object(s.jsx)("a",{href:"https://github.com/dsoft20/psx_retroshader",children:"\xa0a PSX shader created by dsoft20\xa0"}),"and an",Object(s.jsx)("a",{href:"https://assetstore.unity.com/packages/3d/props/exterior/polygon-prototype-pack-137126",children:"\xa0explosion particle from Synty Studios\u2019s POLYGON prototyping asset pack."})]})]})]})})]})}var F=a.p+"static/media/monbatScrn.26458778.png",A=a.p+"static/media/monsterCard.7fc4289c.png",z=a.p+"static/media/monsterScriptable.0a7e43bd.png",D=a.p+"static/media/moveScriptable.ea0e4154.png";function U(){return Object(s.jsxs)(s.Fragment,{children:[Object(s.jsx)("img",{src:A}),Object(s.jsx)("h3",{children:"MONSTER"}),Object(s.jsx)("h3",{children:" GAME"})]})}function W(){return Object(s.jsxs)("div",{className:"project-modal__modal",children:[Object(s.jsx)(k.a,{children:Object(s.jsx)("h1",{className:"project-modal__modal__title",children:"Pok\xe9mon-style turn based system"})}),Object(s.jsx)(P.a,{children:Object(s.jsxs)("div",{className:"project-modal__modal__content",children:[Object(s.jsxs)("div",{className:"project-modal__modal__content__header",children:[Object(s.jsxs)("div",{className:"project-modal__modal__content__header__image",children:[Object(s.jsx)("img",{src:F,alt:"A screenshot of the Untitled Monster Game, showing a Pok\xe9mon-like battle scene."}),Object(s.jsx)("a",{href:"https://watsondynamite.itch.io/monbat-game",children:" Itch.io Download Link"})]}),Object(s.jsxs)("span",{className:"project-modal__modal__content__header__intro",children:["Controls: The game is controlled entirely with the mouse. WARNING: There is no win condition yet. When you or your opponent run out of monsters, close or reset the game.",Object(s.jsx)("br",{}),"The goal of this project was to develop a competitve, PvP, 1v1 turn-based monster battler inspired by Pok\xe9mon. Since Unity is mostly used for games whose action plays out in real time, the challenge here was to place the flow of the game within a strictly synchronous and sequential system (player 1 attacks, player 2 takes damage, player 2 attacks, player 1 takes damage)."]})]}),Object(s.jsxs)("div",{className:"project-modal__modal__content__body",children:[Object(s.jsx)("p",{children:"Another goal of this project was also to make a very easily scalable game where adding new content is very simple. To achieve this, the stats of each monster and move are implemented in a data structure that works as the application\u2019s model. Instead of working with prefabs that have their own behavior scripts, direct interaction between game objects is near non-existent, and the characters seen in the game are merely \u201cpuppeted\u201d by a combat controller that oversees the match \u201cbehind the scenes\u201d, in an MVC-like pattern. This makes the actual monster\u2019s data very simple and as such, new monsters, moves, etc. can be easily created through the use of ScriptableObjects:"}),Object(s.jsxs)("div",{className:"project-modal__modal__content__body__image-row",children:[Object(s.jsx)("img",{src:z,alt:"the monster's scriptableObject implementation, showing stats and moves"}),Object(s.jsx)("img",{src:D,alt:"an example of the Move's scriptableObject implementation"})]}),Object(s.jsxs)("p",{children:["This project has also taught me to work with IEnumerator methods for state machine-like behavior and delegates for dynamic method calling.",Object(s.jsx)("br",{}),"Overall, this has been a very challenging project to work on, as it involves a lot of calculations and timing, more so than the other Unity projects I\u2019ve worked on. One of the main challenges was getting the turn system to work properly, especially when attacking results in the death of one of the monsters. Since it\u2019s a game mostly around calculations and stats, it was also a challenge to plan out the data structures that would allow me to define the properties of monsters and attacks, as well as implementing the effects of each attack.",Object(s.jsx)("br",{}),"In addition, of all the small games and projects I\u2019ve done over the years, this one was the one that really got my software engineering brain going. It was the first time I had worked with data structures in a game development environment, since it was the first time I needed to work on a game whose mechanics weren't assisted by the real-time aspect of the Unity engine.",Object(s.jsx)("br",{}),"The environment\u2019s models and textures are free assets. The UI graphics are a mix of Unity\u2019s default UI sprites and custom made ones. The monsters themselves are the \u201cFiery\u201d and \u201cCyclopes\u201d \u201cBoximon\u201d assets made by Meshtint Studio.",Object(s.jsx)("br",{}),"In the future, I am planning to implement networking, more playable creatures, as well as collaborate with artists in order to develop the game\u2019s style and creatures.",Object(s.jsx)("br",{}),"I\u2019ve also created a Youtube Playlist in which I upload progress update videos showcasing the functionalities I implement into the project."]})]})]})})]})}var L,J={emailError:!1,messageError:!1,nameError:!1,hasMessageSent:!1,hasError:!1},G={root:"homePage__contacts__form__input"},R=function(e){Object(m.a)(a,e);var t=Object(j.a)(a);function a(){var e;Object(h.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).state=J,e.renderBanner=function(){return Object(s.jsxs)("div",{className:"homePage__banner border",children:[Object(s.jsxs)("div",{className:"homePage__banner__content",children:[Object(s.jsxs)("div",{className:"homePage__banner__content__titles",children:[Object(s.jsx)("h1",{children:"Jo\xe3o Dias"}),Object(s.jsx)("h2",{children:"Software Developer"})]}),Object(s.jsxs)("div",{className:"homePage__banner__content__aboutme",children:[Object(s.jsx)("h4",{children:" My name is Jo\xe3o Dias (though you may know me as Watson), and I am a recent Computer Engineering graduate (Politechnic of Leiria, Portugal), hoping to enter the gaming industry. "}),Object(s.jsx)("h4",{children:" I have skills in developing software in a variety of programming languages (Java, C, C# , Javascript) and environments (Android, Unity, Node.js). "}),Object(s.jsx)("h4",{children:"Videogames have always been my passion from a very early age. I started tinkering with game creation tools when I was 10 years old and ever since my dream career has lied in the world of game development."}),Object(s.jsx)("h4",{children:"This portfolio is a compendium of a few small personal projects and protoypes I developed in my free time that I consider to be most fit to represent my skills. I developed these projects not only out of passion for game development, but also as learning experiences or to test out specific game mechanics. To me, nothing is more valuable than knowledge and I love learning whenever I can."}),Object(s.jsx)("h4",{children:"Each game has a link to a playable version as well as small description explaining the intended learning goal for each project and the difficulties in its development."})]}),Object(s.jsxs)("div",{className:"homePage__banner__content__buttons",children:[Object(s.jsx)("div",{className:"custom-button",children:Object(s.jsx)(_.Link,{to:"contacts",smooth:!0,duration:300,children:"Contact Me"})}),Object(s.jsx)("div",{className:"custom-button",children:Object(s.jsx)(_.Link,{to:"projects",smooth:!0,duration:300,children:"Projects"})})]})]}),Object(s.jsxs)("div",{className:"homePage__banner__image",children:[Object(s.jsx)("img",{src:O,alt:"avatar"}),Object(s.jsxs)("div",{className:"homePage__banner__image__icons",children:[Object(s.jsx)("div",{className:"homePage__banner__image__icons__icon",children:Object(s.jsx)("a",{href:"mailto:jrld98@gmail.com",children:Object(s.jsx)(b.a,{})})}),Object(s.jsx)("div",{className:"homePage__banner__image__icons__icon",children:Object(s.jsx)("a",{href:"linkedin.com/in/jo\xe3o-dias-a6493119b",children:Object(s.jsx)(p.a,{})})}),Object(s.jsx)("div",{className:"homePage__banner__image__icons__icon",children:Object(s.jsx)("a",{href:"https://itch.io/profile/watsondynamite",children:Object(s.jsx)(b.b,{})})})]})]})]})},e.renderProjects=function(){return Object(s.jsx)(_.Element,{name:"projects",children:Object(s.jsxs)("div",{className:"homePage__projects",children:[Object(s.jsxs)("div",{className:"homePage__subheader",children:[Object(s.jsx)("h1",{children:"Projects"}),Object(s.jsx)("h2",{children:"(Section under constant construction!)"})]}),Object(s.jsxs)("div",{className:"homePage__projects__container",children:[Object(s.jsx)(w,{cardChildren:Object(s.jsx)(I,{}),children:Object(s.jsx)(S,{})}),Object(s.jsx)(w,{cardChildren:Object(s.jsx)(E,{}),children:Object(s.jsx)(M,{})}),Object(s.jsx)(w,{cardChildren:Object(s.jsx)(U,{}),children:Object(s.jsx)(W,{})})]})]})})},e.onFieldChange=function(){e.setState({hasMessageSent:!1,hasError:!1})},e.sendEmail=function(t){t.preventDefault(),f.a.sendForm("service_pdaouoe","template_wiohj9g",t.target,"user_89MDY6ZBQdqzyFXqI5o5a").then((function(){e.setState({hasMessageSent:!0,hasError:!1})}),(function(t){console.log(t),e.setState({hasError:!0})}))},e.renderContacts=function(){var t=e.state,a=t.nameError,n=t.messageError,r=t.emailError,i=t.hasMessageSent,o=t.hasError;return Object(s.jsx)(_.Element,{name:"contacts",children:Object(s.jsxs)("div",{className:"homePage__contacts",children:[Object(s.jsxs)("div",{className:"homePage__subheader",children:[Object(s.jsx)("h1",{children:"Contact Form"}),Object(s.jsx)("h2",{children:"Feel free to contact me!"})]}),Object(s.jsxs)("form",{className:"homePage__contacts__form border",onSubmit:e.sendEmail,children:[Object(s.jsx)("h1",{children:"To: jrld98@gmail.com"}),Object(s.jsx)(g.a,{required:!0,label:"Name / Company",name:"user_name",error:a,variant:"outlined",classes:G,onChange:e.onFieldChange}),Object(s.jsx)(g.a,{required:!0,label:"Email",type:"email",name:"user_email",error:r,variant:"outlined",classes:G,onChange:e.onFieldChange}),Object(s.jsx)(g.a,{required:!0,multiline:!0,rows:12,rowsMax:12,label:"Message",type:"textarea",name:"message",error:n,variant:"outlined",classes:G,onChange:e.onFieldChange}),Object(s.jsx)("button",{className:"custom-button",type:"submit",children:"SEND"}),i&&Object(s.jsx)("p",{children:"Message sent!"}),o&&Object(s.jsx)("p",{style:{color:"red"},children:"Sorry, an error occurred."})]})]})})},e.renderFooter=function(){return Object(s.jsx)("div",{className:"homePage__footer",children:"Created by Jo\xe3o Dias using create-react-app, TypeScript, SASS, Material-UI, email-js, react-icons and react-scroll."})},e}return Object(d.a)(a,[{key:"render",value:function(){return Object(s.jsxs)("div",{className:"homePage",children:[this.renderBanner(),this.renderProjects(),this.renderContacts(),this.renderFooter()]})}}]),a}(r.a.Component);!function(e){e.HOME_ROUTE=""}(L||(L={}));var q=function(){return Object(s.jsx)("div",{children:Object(s.jsx)(c.a,{children:Object(s.jsx)(l.c,{children:Object(s.jsx)(l.a,{path:L.HOME_ROUTE,component:R})})})})},B=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,132)).then((function(t){var a=t.getCLS,s=t.getFID,n=t.getFCP,r=t.getLCP,i=t.getTTFB;a(e),s(e),n(e),r(e),i(e)}))};o.a.render(Object(s.jsx)(r.a.StrictMode,{children:Object(s.jsx)(q,{})}),document.getElementById("root")),B()}},[[94,1,2]]]);
//# sourceMappingURL=main.81a867e0.chunk.js.map